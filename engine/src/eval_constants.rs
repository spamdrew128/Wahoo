#![cfg_attr(rustfmt, rustfmt_skip)]
use crate::{evaluation::ScoreTuple, board_representation::{NUM_SQUARES, NUM_PIECES}};

macro_rules! s {
  ($mg:expr, $eg:expr) => {
    ScoreTuple::new($mg, $eg)
  };
}

pub const PST: [[ScoreTuple; NUM_SQUARES as usize]; NUM_PIECES as usize] = [
// Knight PST
[
  s!(347, -16), s!(465, -36), s!(439, -18), s!(559, -34), s!(526, -35), s!(442, -13), s!(468, -19), s!(413, -20), 
  s!(471, -19), s!(446, -12), s!(661, -63), s!(552, -33), s!(604, -33), s!(710, -63), s!(496, -13), s!(555, -61), 
  s!(506, -39), s!(620, -54), s!(601, -36), s!(640, -38), s!(695, -58), s!(649, -44), s!(664, -45), s!(485, -22), 
  s!(493, -15), s!(574, -34), s!(577, -22), s!(644, -26), s!(640, -32), s!(602, -19), s!(584, -7), s!(561, -7), 
  s!(481, -21), s!(524, -23), s!(570, -21), s!(555, -12), s!(576, -13), s!(608, -24), s!(560, -31), s!(520, -12), 
  s!(441, 10), s!(483, -7), s!(522, -14), s!(520, -13), s!(562, -15), s!(534, -10), s!(518, -9), s!(470, -22), 
  s!(396, 16), s!(446, 7), s!(482, 11), s!(479, 0), s!(501, -14), s!(522, -12), s!(447, -1), s!(421, -16), 
  s!(329, 43), s!(431, -8), s!(394, 26), s!(433, 11), s!(458, 4), s!(413, 17), s!(439, -19), s!(382, 0), 
],
// Bishop PST
[
  s!(545, 25), s!(486, 12), s!(481, 14), s!(523, 4), s!(506, 1), s!(486, -3), s!(468, 0), s!(553, 15), 
  s!(549, 9), s!(642, 7), s!(609, 6), s!(601, 4), s!(533, 3), s!(642, -16), s!(635, 0), s!(559, -1), 
  s!(548, 14), s!(705, -26), s!(634, 1), s!(692, -8), s!(705, -25), s!(695, -10), s!(650, -16), s!(593, -13), 
  s!(596, -8), s!(633, -1), s!(678, -17), s!(689, -10), s!(667, -10), s!(675, -26), s!(653, -29), s!(606, -12), 
  s!(575, -12), s!(625, -15), s!(638, -6), s!(644, -15), s!(646, -6), s!(631, 2), s!(587, -5), s!(619, -18), 
  s!(590, 1), s!(594, -13), s!(648, -10), s!(592, -4), s!(602, -10), s!(629, -11), s!(607, -14), s!(569, 0), 
  s!(531, 9), s!(614, -6), s!(588, -4), s!(595, 0), s!(594, -10), s!(589, 2), s!(621, -10), s!(502, -10), 
  s!(519, 22), s!(488, 22), s!(552, 0), s!(494, 17), s!(540, 21), s!(539, 9), s!(538, 18), s!(504, 15), 
],
// Rook PST
[
  s!(1039, -14), s!(999, 6), s!(1050, -11), s!(1291, -84), s!(1288, -92), s!(1109, -27), s!(1054, -14), s!(1075, -36), 
  s!(996, -11), s!(940, 9), s!(1060, -21), s!(1069, -43), s!(976, -23), s!(1036, -27), s!(965, -6), s!(1021, -19), 
  s!(884, -12), s!(980, -30), s!(973, -31), s!(999, -51), s!(951, -27), s!(985, -15), s!(945, -2), s!(891, 21), 
  s!(752, 34), s!(836, 2), s!(820, 4), s!(824, 30), s!(830, 31), s!(858, 11), s!(835, 29), s!(749, 65), 
  s!(726, 49), s!(799, 29), s!(733, 58), s!(790, 20), s!(799, 52), s!(862, 14), s!(721, 56), s!(725, 67), 
  s!(720, 50), s!(753, 54), s!(832, 20), s!(786, 12), s!(832, -2), s!(810, 31), s!(818, 25), s!(755, 31), 
  s!(737, 49), s!(786, 37), s!(800, 22), s!(803, 8), s!(896, -8), s!(793, 48), s!(810, 25), s!(724, 46), 
  s!(717, 66), s!(759, 63), s!(796, 45), s!(866, 15), s!(912, -11), s!(794, 53), s!(732, 71), s!(717, 65), 
],
// Queen PST
[
  s!(2096, -166), s!(2285, -213), s!(2378, -288), s!(2668, -339), s!(2575, -331), s!(2408, -297), s!(2284, -242), s!(2201, -211), 
  s!(2130, -189), s!(2141, -50), s!(2251, -230), s!(2603, -365), s!(2596, -374), s!(2332, -308), s!(2377, -323), s!(2279, -309), 
  s!(2233, -308), s!(2240, -229), s!(2311, -295), s!(2429, -344), s!(2401, -333), s!(2383, -343), s!(2341, -337), s!(2292, -316), 
  s!(2156, -222), s!(2141, -108), s!(2231, -201), s!(2253, -141), s!(2215, 46), s!(2275, -131), s!(2199, -145), s!(2260, -196), 
  s!(2124, -167), s!(2129, -77), s!(2178, -113), s!(2163, -39), s!(2204, -73), s!(2181, -131), s!(2209, -77), s!(2133, -115), 
  s!(2122, -134), s!(2163, -189), s!(2154, -83), s!(2175, -137), s!(2139, -138), s!(2193, -161), s!(2222, -164), s!(2162, -164), 
  s!(2063, -29), s!(2125, -124), s!(2170, -176), s!(2143, -177), s!(2180, -188), s!(2152, -125), s!(2163, -128), s!(2192, -179), 
  s!(2051, -58), s!(2076, -57), s!(2090, -116), s!(2137, -250), s!(2078, -126), s!(2063, -69), s!(2076, -45), s!(2116, -136), 
],
// Pawn PST
[
  s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), 
  s!(396, 41), s!(222, 117), s!(215, 104), s!(305, 89), s!(142, 130), s!(205, 107), s!(265, 79), s!(306, 90), 
  s!(129, 132), s!(168, 102), s!(119, 111), s!(225, 63), s!(172, 87), s!(116, 108), s!(171, 88), s!(137, 92), 
  s!(83, 101), s!(131, 89), s!(146, 64), s!(144, 65), s!(145, 64), s!(151, 55), s!(153, 77), s!(59, 116), 
  s!(43, 115), s!(93, 94), s!(77, 72), s!(129, 49), s!(130, 43), s!(111, 74), s!(96, 88), s!(35, 132), 
  s!(35, 117), s!(79, 103), s!(92, 71), s!(82, 72), s!(121, 69), s!(101, 82), s!(133, 80), s!(33, 126), 
  s!(20, 138), s!(81, 94), s!(66, 122), s!(62, 88), s!(72, 103), s!(150, 66), s!(121, 82), s!(19, 135), 
  s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), s!(100, 100), 
],
// King PST
[
  s!(650, -79), s!(804, -90), s!(242, -4), s!(46, 41), s!(-109, 62), s!(-549, 73), s!(-473, 72), s!(-622, 113), 
  s!(107, -19), s!(118, -16), s!(-187, 65), s!(-125, 97), s!(-239, 116), s!(49, 38), s!(-665, 59), s!(-595, 60), 
  s!(-215, 44), s!(-173, 35), s!(-262, 93), s!(-83, 76), s!(-359, 154), s!(14, 84), s!(-72, 97), s!(-808, 109), 
  s!(-11, 27), s!(-5, 29), s!(-220, 91), s!(-134, 70), s!(-257, 125), s!(-195, 73), s!(-76, 44), s!(-380, 88), 
  s!(12, 0), s!(55, -8), s!(-79, 42), s!(-119, 35), s!(-197, 70), s!(-157, 35), s!(-151, 13), s!(-186, 64), 
  s!(37, 0), s!(43, -29), s!(-46, 6), s!(-106, 21), s!(-88, 23), s!(-39, 3), s!(-13, -3), s!(24, -22), 
  s!(73, -8), s!(40, -6), s!(88, -26), s!(4, 1), s!(-11, 5), s!(71, -19), s!(100, -39), s!(110, -63), 
  s!(166, -14), s!(55, -12), s!(48, -18), s!(21, -20), s!(93, -39), s!(67, -39), s!(122, -41), s!(120, -48), 
],
];
