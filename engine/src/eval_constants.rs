#![cfg_attr(rustfmt, rustfmt_skip)]
use crate::{evaluation::ScoreTuple, board_representation::NUM_PIECES, pst::Pst};

const fn s(mg: i16, eg: i16) -> ScoreTuple { ScoreTuple::new(mg, eg) }

pub const MATERIAL_PSTS: [Pst; NUM_PIECES as usize] = [
// Knight PST
Pst::new([
  s(161, 214), s(259, 309), s(204, 303), s(357, 290), s(386, 251), s(249, 309), s(282, 242), s(251, 235), 
  s(324, 270), s(395, 260), s(395, 282), s(383, 296), s(321, 344), s(421, 278), s(390, 252), s(377, 255), 
  s(301, 313), s(380, 291), s(379, 316), s(424, 303), s(432, 289), s(431, 303), s(397, 290), s(379, 256), 
  s(355, 256), s(363, 289), s(395, 300), s(394, 294), s(379, 317), s(422, 295), s(362, 302), s(402, 232), 
  s(333, 261), s(343, 273), s(354, 307), s(362, 310), s(372, 318), s(367, 301), s(374, 297), s(341, 260), 
  s(308, 237), s(335, 280), s(343, 286), s(354, 292), s(359, 291), s(348, 276), s(368, 263), s(313, 245), 
  s(314, 203), s(305, 262), s(332, 276), s(338, 267), s(336, 266), s(359, 251), s(335, 254), s(310, 259), 
  s(251, 273), s(310, 203), s(307, 253), s(329, 253), s(333, 239), s(320, 237), s(312, 216), s(228, 308), 
]),
// Bishop PST
Pst::new([
  s(305, 349), s(280, 328), s(275, 333), s(279, 320), s(326, 317), s(335, 330), s(286, 310), s(371, 282), 
  s(360, 321), s(369, 319), s(402, 308), s(386, 301), s(344, 314), s(396, 270), s(380, 304), s(334, 316), 
  s(350, 307), s(383, 313), s(400, 302), s(428, 313), s(426, 321), s(425, 314), s(412, 294), s(414, 288), 
  s(377, 303), s(381, 315), s(413, 323), s(417, 335), s(412, 324), s(416, 310), s(385, 334), s(400, 283), 
  s(384, 285), s(389, 321), s(394, 317), s(388, 338), s(412, 313), s(386, 327), s(389, 307), s(382, 293), 
  s(377, 286), s(393, 284), s(373, 328), s(385, 310), s(373, 328), s(397, 311), s(378, 308), s(367, 308), 
  s(383, 259), s(377, 279), s(365, 291), s(365, 298), s(377, 299), s(387, 294), s(392, 284), s(373, 292), 
  s(283, 307), s(387, 276), s(355, 255), s(363, 293), s(351, 297), s(347, 270), s(279, 327), s(323, 299), 
]),
// Rook PST
Pst::new([
  s(576, 510), s(539, 532), s(585, 513), s(584, 527), s(561, 525), s(571, 531), s(560, 518), s(633, 488), 
  s(521, 539), s(546, 536), s(573, 527), s(581, 526), s(606, 518), s(594, 518), s(563, 523), s(590, 505), 
  s(499, 544), s(487, 541), s(558, 522), s(569, 517), s(572, 525), s(602, 511), s(576, 512), s(550, 508), 
  s(487, 537), s(467, 544), s(504, 538), s(533, 525), s(545, 511), s(545, 506), s(499, 523), s(501, 528), 
  s(453, 528), s(460, 542), s(470, 537), s(494, 533), s(505, 519), s(470, 539), s(494, 512), s(476, 511), 
  s(448, 511), s(470, 510), s(472, 515), s(457, 517), s(475, 503), s(458, 517), s(490, 499), s(451, 492), 
  s(454, 489), s(470, 503), s(473, 513), s(496, 499), s(490, 498), s(506, 480), s(473, 482), s(411, 511), 
  s(472, 502), s(481, 501), s(480, 517), s(494, 511), s(504, 497), s(480, 504), s(421, 546), s(460, 471), 
]),
// Queen PST
Pst::new([
  s(890, 946), s(972, 906), s(950, 961), s(948, 977), s(991, 964), s(995, 931), s(979, 950), s(955, 948), 
  s(911, 925), s(899, 953), s(915, 982), s(968, 964), s(958, 997), s(981, 972), s(940, 951), s(947, 955), 
  s(889, 976), s(901, 972), s(937, 964), s(958, 982), s(985, 957), s(990, 962), s(962, 995), s(947, 979), 
  s(927, 932), s(911, 957), s(924, 950), s(912, 986), s(921, 1001), s(953, 991), s(935, 978), s(935, 965), 
  s(911, 898), s(910, 943), s(914, 960), s(907, 983), s(913, 971), s(914, 953), s(915, 989), s(905, 936), 
  s(885, 942), s(921, 902), s(888, 983), s(910, 930), s(900, 947), s(917, 921), s(937, 924), s(918, 869), 
  s(891, 912), s(930, 842), s(924, 867), s(920, 862), s(914, 900), s(913, 830), s(913, 850), s(875, 886), 
  s(905, 892), s(917, 886), s(915, 870), s(922, 832), s(919, 826), s(880, 836), s(921, 814), s(911, 839), 
]),
// Pawn PST
Pst::new([
  s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), 
  s(180, 190), s(167, 197), s(162, 179), s(168, 180), s(165, 171), s(130, 188), s(117, 198), s(104, 173), 
  s(47, 150), s(87, 139), s(78, 121), s(121, 122), s(157, 136), s(135, 106), s(122, 161), s(111, 118), 
  s(56, 131), s(97, 119), s(92, 95), s(105, 107), s(122, 97), s(104, 88), s(100, 107), s(71, 108), 
  s(47, 115), s(77, 112), s(85, 95), s(101, 97), s(103, 103), s(94, 101), s(99, 108), s(62, 104), 
  s(48, 102), s(81, 110), s(79, 102), s(74, 101), s(81, 110), s(83, 106), s(126, 99), s(74, 90), 
  s(31, 119), s(73, 121), s(65, 115), s(54, 115), s(61, 120), s(110, 112), s(121, 112), s(59, 105), 
  s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), 
]),
// King PST
Pst::new([
  s(20, -37), s(14, 25), s(16, 54), s(25, 20), s(60, 0), s(67, 29), s(67, 64), s(-4, -54), 
  s(37, -32), s(0, 21), s(9, 45), s(72, -25), s(-14, 19), s(39, 45), s(45, 28), s(-81, 13), 
  s(-3, 24), s(36, 30), s(33, 7), s(-60, 33), s(-96, 23), s(26, 42), s(-31, 57), s(-37, 24), 
  s(-66, 13), s(37, 33), s(9, 29), s(-25, 22), s(19, 23), s(-29, 34), s(7, 32), s(9, 2), 
  s(15, -9), s(2, 13), s(-38, 35), s(-42, 31), s(-85, 46), s(-40, 37), s(-18, 28), s(-46, 16), 
  s(2, -43), s(20, -13), s(-65, 37), s(-123, 48), s(-92, 42), s(-97, 42), s(-37, 23), s(-66, 11), 
  s(7, -18), s(-22, 13), s(-33, 22), s(-92, 35), s(-91, 33), s(-31, 20), s(22, 0), s(29, -22), 
  s(60, -37), s(16, -46), s(7, -25), s(-69, -13), s(3, -44), s(-30, -24), s(53, -34), s(59, -62), 
]),
];

pub const PASSER_PST: Pst = Pst::new([
  s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), 
  s(80, 90), s(67, 97), s(62, 79), s(68, 80), s(65, 71), s(30, 88), s(17, 98), s(4, 73), 
  s(83, 76), s(69, 87), s(88, 62), s(44, 51), s(9, 35), s(24, 69), s(-77, 67), s(36, 71), 
  s(35, 44), s(-11, 63), s(-9, 53), s(15, 24), s(5, 34), s(9, 38), s(26, 58), s(-27, 62), 
  s(22, 20), s(0, 35), s(-1, 21), s(2, 7), s(-41, 21), s(0, 16), s(-17, 37), s(13, 28), 
  s(0, 2), s(-41, 20), s(-3, 15), s(-18, 5), s(-19, 12), s(-5, 15), s(-19, 23), s(8, 6), 
  s(28, -15), s(-9, 9), s(3, -14), s(-10, -5), s(17, -10), s(-22, 14), s(-1, 9), s(-1, -5), 
  s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), s(0, 0), 
]);
