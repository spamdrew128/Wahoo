#![cfg_attr(rustfmt, rustfmt_skip)]
use crate::{evaluation::ScoreTuple, board_representation::NUM_PIECES, eval_constants_helpers::Pst};

const fn s(mg: i16, eg: i16) -> ScoreTuple { ScoreTuple::new(mg, eg) }

pub const MATERIAL_PSTS: [Pst; NUM_PIECES as usize] = [
// Knight PST
Pst::new([
  s(214, 273), s(430, 396), s(214, 393), s(507, 348), s(630, 277), s(119, 418), s(353, 363), s(351, 269), 
  s(381, 357), s(526, 318), s(569, 312), s(582, 336), s(556, 372), s(653, 253), s(442, 364), s(435, 326), 
  s(496, 322), s(518, 329), s(520, 387), s(610, 344), s(603, 369), s(626, 349), s(556, 355), s(522, 309), 
  s(497, 319), s(499, 350), s(561, 356), s(538, 387), s(525, 378), s(570, 362), s(517, 366), s(544, 298), 
  s(467, 331), s(469, 336), s(489, 366), s(499, 376), s(509, 379), s(513, 387), s(512, 354), s(474, 303), 
  s(441, 298), s(450, 350), s(482, 337), s(494, 372), s(486, 361), s(494, 335), s(498, 309), s(448, 272), 
  s(403, 207), s(444, 322), s(462, 312), s(464, 353), s(475, 349), s(488, 316), s(499, 291), s(445, 299), 
  s(398, 386), s(434, 226), s(386, 312), s(457, 327), s(445, 287), s(434, 288), s(443, 256), s(365, 276), 
]),
// Bishop PST
Pst::new([
  s(435, 402), s(444, 409), s(431, 410), s(482, 350), s(556, 394), s(342, 379), s(503, 374), s(538, 318), 
  s(477, 358), s(519, 384), s(499, 403), s(520, 397), s(494, 384), s(502, 431), s(522, 360), s(500, 332), 
  s(484, 407), s(533, 376), s(542, 408), s(583, 384), s(635, 385), s(633, 390), s(564, 406), s(538, 348), 
  s(519, 354), s(526, 404), s(585, 384), s(583, 399), s(544, 410), s(568, 394), s(542, 384), s(535, 379), 
  s(507, 373), s(554, 377), s(555, 387), s(560, 408), s(572, 390), s(529, 401), s(542, 376), s(521, 339), 
  s(512, 351), s(537, 344), s(502, 415), s(535, 398), s(511, 410), s(533, 383), s(529, 381), s(521, 373), 
  s(568, 344), s(515, 341), s(534, 359), s(503, 375), s(525, 375), s(527, 364), s(550, 343), s(517, 332), 
  s(403, 395), s(494, 366), s(493, 294), s(530, 356), s(504, 335), s(485, 332), s(340, 369), s(451, 407), 
]),
// Rook PST
Pst::new([
  s(756, 617), s(773, 599), s(855, 599), s(766, 621), s(769, 624), s(788, 622), s(747, 639), s(750, 613), 
  s(703, 657), s(759, 631), s(786, 615), s(817, 607), s(819, 603), s(822, 593), s(715, 628), s(795, 596), 
  s(661, 645), s(728, 624), s(760, 628), s(770, 602), s(767, 604), s(824, 594), s(778, 614), s(692, 617), 
  s(659, 629), s(660, 653), s(704, 629), s(713, 620), s(715, 610), s(711, 622), s(667, 627), s(674, 615), 
  s(631, 621), s(650, 625), s(665, 614), s(646, 627), s(692, 599), s(651, 608), s(651, 622), s(652, 577), 
  s(607, 595), s(647, 606), s(645, 607), s(626, 628), s(650, 614), s(642, 613), s(670, 599), s(623, 605), 
  s(608, 587), s(641, 592), s(623, 612), s(641, 622), s(661, 590), s(678, 582), s(655, 579), s(561, 597), 
  s(629, 599), s(633, 617), s(650, 619), s(663, 617), s(680, 590), s(644, 611), s(586, 641), s(630, 550), 
]),
// Queen PST
Pst::new([
  s(1760, 984), s(1820, 949), s(1875, 951), s(1947, 933), s(1984, 873), s(1916, 934), s(1937, 934), s(1888, 952), 
  s(1840, 920), s(1828, 938), s(1855, 987), s(1890, 974), s(1859, 1006), s(1919, 991), s(1908, 959), s(1885, 954), 
  s(1853, 884), s(1839, 962), s(1855, 959), s(1912, 953), s(1880, 974), s(1929, 982), s(1911, 995), s(1934, 891), 
  s(1821, 914), s(1851, 933), s(1850, 941), s(1859, 968), s(1860, 1022), s(1884, 983), s(1841, 998), s(1879, 921), 
  s(1856, 850), s(1864, 855), s(1854, 923), s(1847, 958), s(1848, 959), s(1855, 961), s(1851, 972), s(1862, 882), 
  s(1813, 836), s(1867, 866), s(1838, 863), s(1851, 873), s(1832, 917), s(1872, 864), s(1870, 869), s(1853, 870), 
  s(1858, 760), s(1820, 814), s(1868, 749), s(1865, 799), s(1858, 803), s(1858, 770), s(1873, 755), s(1792, 946), 
  s(1839, 824), s(1817, 857), s(1848, 831), s(1863, 759), s(1870, 723), s(1870, 704), s(1987, 532), s(1837, 831), 
]),
// Pawn PST
Pst::new([
  s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), 
  s(259, 414), s(266, 438), s(301, 399), s(249, 370), s(267, 363), s(238, 382), s(100, 415), s(93, 367), 
  s(89, 298), s(151, 275), s(117, 256), s(138, 247), s(175, 227), s(160, 229), s(113, 272), s(113, 266), 
  s(77, 233), s(122, 208), s(110, 191), s(129, 176), s(141, 167), s(115, 161), s(127, 191), s(71, 202), 
  s(66, 194), s(96, 193), s(98, 161), s(127, 156), s(126, 159), s(114, 170), s(116, 169), s(79, 177), 
  s(64, 176), s(104, 177), s(102, 156), s(95, 177), s(103, 176), s(98, 167), s(157, 155), s(89, 159), 
  s(47, 199), s(92, 193), s(78, 195), s(64, 172), s(76, 179), s(124, 175), s(152, 168), s(73, 157), 
  s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), s(100, 100), 
  ]),
// King PST
Pst::new([
  s(812, -190), s(223, 10), s(27, -3), s(1358, -586), s(-182, 53), s(-21, 64), s(-207, 59), s(451, -106), 
  s(-124, 72), s(-40, 113), s(-438, 148), s(-413, 211), s(4, 94), s(103, 75), s(-127, 146), s(192, 58), 
  s(55, 68), s(-217, 141), s(-350, 195), s(-236, 165), s(-85, 128), s(-103, 136), s(-39, 141), s(-105, 109), 
  s(-118, 96), s(-163, 131), s(-53, 87), s(-150, 115), s(-165, 126), s(-168, 139), s(-116, 131), s(-184, 89), 
  s(-267, 113), s(-180, 95), s(-174, 112), s(-150, 119), s(-216, 120), s(-213, 137), s(-92, 80), s(-231, 88), 
  s(-115, 50), s(-120, 94), s(-173, 99), s(-192, 113), s(-225, 124), s(-196, 109), s(-123, 85), s(-132, 64), 
  s(-70, 45), s(-45, 37), s(-40, 65), s(-122, 83), s(-128, 84), s(-56, 68), s(-4, 42), s(3, 24), 
  s(64, -44), s(-20, -9), s(-16, -6), s(-80, 5), s(-27, -18), s(-70, 13), s(38, -7), s(38, -55), 
]),
];

pub const PASSER_PST: Pst = Pst::new([
  s(214, 273), s(430, 396), s(214, 393), s(507, 348), s(630, 277), s(119, 418), s(353, 363), s(351, 269), 
  s(381, 357), s(526, 318), s(569, 312), s(582, 336), s(556, 372), s(653, 253), s(442, 364), s(435, 326), 
  s(496, 322), s(518, 329), s(520, 387), s(610, 344), s(603, 369), s(626, 349), s(556, 355), s(522, 309), 
  s(497, 319), s(499, 350), s(561, 356), s(538, 387), s(525, 378), s(570, 362), s(517, 366), s(544, 298), 
  s(467, 331), s(469, 336), s(489, 366), s(499, 376), s(509, 379), s(513, 387), s(512, 354), s(474, 303), 
  s(441, 298), s(450, 350), s(482, 337), s(494, 372), s(486, 361), s(494, 335), s(498, 309), s(448, 272), 
  s(403, 207), s(444, 322), s(462, 312), s(464, 353), s(475, 349), s(488, 316), s(499, 291), s(445, 299), 
  s(398, 386), s(434, 226), s(386, 312), s(457, 327), s(445, 287), s(434, 288), s(443, 256), s(365, 276), 
]);